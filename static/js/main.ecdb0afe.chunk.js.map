{"version":3,"sources":["components/Carousel/Carousel.tsx","components/InputRange/InputRange.tsx","App.tsx","index.tsx"],"names":["Carousel","state","translate","itemAmount","props","images","length","caclMaxTranslate","frameSize","itemWidth","calcWrapperWidth","nextSlide","step","MaxTranslate","setState","toTranslate","prevSlide","this","animationDuration","carouselListStyles","transform","transition","carouselWrapperStyles","width","slideStyles","className","style","map","image","i","src","alt","toString","type","onClick","React","Component","InputRange","id","value","max","min","callback","htmlFor","name","onChange","target","Number","defaultProps","App","setNewState","stateKey","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecdb0afe.chunk.js","sourcesContent":["import React from 'react';\nimport { CarouselSettings } from '../../types/CarouselSettings';\nimport './Carousel.scss';\n\ninterface State {\n  translate: number;\n  itemAmount: number;\n}\n\nexport class Carousel extends React.Component<CarouselSettings, State> {\n  state = {\n    translate: 0,\n    itemAmount: this.props.images.length,\n  };\n\n  caclMaxTranslate = () => {\n    const { frameSize, itemWidth } = this.props;\n    const { itemAmount } = this.state;\n\n    return itemWidth * (itemAmount - frameSize);\n  };\n\n  calcWrapperWidth = () => {\n    return this.props.itemWidth * this.props.frameSize;\n  };\n\n  nextSlide = () => {\n    const { translate } = this.state;\n    const { itemWidth, step } = this.props;\n    const MaxTranslate = -this.caclMaxTranslate();\n\n    if (translate !== MaxTranslate) {\n      this.setState((state) => {\n        let toTranslate = state.translate - itemWidth * step;\n\n        if (toTranslate < MaxTranslate) {\n          toTranslate = MaxTranslate;\n        }\n\n        return {\n          translate: toTranslate,\n        };\n      });\n    }\n  };\n\n  prevSlide = () => {\n    const { translate } = this.state;\n    const { itemWidth, step } = this.props;\n\n    if (translate !== 0) {\n      this.setState((state) => {\n        let toTranslate = state.translate + itemWidth * step;\n\n        if (toTranslate > 0) {\n          toTranslate = 0;\n        }\n\n        return {\n          translate: toTranslate,\n        };\n      });\n    }\n  };\n\n  render() {\n    const { prevSlide, nextSlide, calcWrapperWidth } = this;\n    const { images, animationDuration, itemWidth } = this.props;\n    const { translate } = this.state;\n\n    const carouselListStyles = {\n      transform: `translateX(${translate}px)`,\n      transition: `transform ${animationDuration}ms linear`,\n    };\n\n    const carouselWrapperStyles = {\n      width: calcWrapperWidth(),\n    };\n\n    const slideStyles = {\n      width: itemWidth,\n    };\n\n    return (\n      <div className=\"carousel\">\n        <div className=\"carousel__list-wrapper\" style={carouselWrapperStyles}>\n          <ul className=\"carousel__list\" style={carouselListStyles}>\n            {images.map((image, i) => (\n              <li key={image}>\n                <img src={image} alt={(i + 1).toString()} style={slideStyles} />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button type=\"button\" onClick={prevSlide}>Prev</button>\n        <button type=\"button\" onClick={nextSlide}>Next</button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ninterface Props {\n  id: string,\n  value: number,\n  max: number,\n  min?: number,\n  step?: number,\n  callback: (value: number, stateName: string) => void;\n}\n\nexport const InputRange: React.FC<Props> = ({\n  id, value, max, min, step, callback,\n}) => {\n  return (\n    <label htmlFor={id}>\n      <input\n        type=\"range\"\n        id={id}\n        name={id}\n        value={value}\n        min={min}\n        max={max}\n        step={step}\n        onChange={({ target }) => {\n          callback(Number(target.value), target.name);\n        }}\n      />\n    </label>\n  );\n};\n\nInputRange.defaultProps = {\n  step: 1,\n  min: 1,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { InputRange } from './components/InputRange';\nimport { CarouselSettings } from './types/CarouselSettings';\n\nclass App extends React.Component<{}, CarouselSettings> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  setNewState = (value: number, stateKey: string) => {\n    this.setState((state) => ({\n      ...state,\n      [stateKey]: value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n\n        <div className=\"app__carousel-settings\">\n          <div className=\"app__carousel-settings-item\">\n            {`Step: ${step}`}\n            <InputRange\n              id=\"step\"\n              value={step}\n              max={images.length}\n              callback={this.setNewState}\n            />\n          </div>\n\n          <div className=\"app__carousel-settings-item\">\n            {`Slide to show: ${frameSize}`}\n            <InputRange\n              id=\"frameSize\"\n              value={frameSize}\n              max={images.length}\n              callback={this.setNewState}\n            />\n          </div>\n\n          <div className=\"app__carousel-settings-item\">\n            {`Slide width: ${itemWidth}px`}\n            <InputRange\n              id=\"itemWidth\"\n              value={itemWidth}\n              max={230}\n              min={130}\n              callback={this.setNewState}\n              step={10}\n            />\n          </div>\n\n          <div className=\"app__carousel-settings-item\">\n            {`Animation duration: ${animationDuration}ms`}\n            <InputRange\n              id=\"animationDuration\"\n              value={animationDuration}\n              max={1000}\n              min={100}\n              callback={this.setNewState}\n              step={50}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}